<?xml version="1.0"?>
<doc>
    <assembly>
        <name>EzrealClient.Analyzers.SourceGenerator</name>
    </assembly>
    <members>
        <member name="T:EzrealClient.Analyzers.SourceGenerator.HttpApiCodeBuilder">
            <summary>
            HttpApi代码构建器
            </summary>
        </member>
        <member name="F:EzrealClient.Analyzers.SourceGenerator.HttpApiCodeBuilder.httpApi">
            <summary>
            接口符号
            </summary>
        </member>
        <member name="F:EzrealClient.Analyzers.SourceGenerator.HttpApiCodeBuilder.apiInterceptorFieldName">
            <summary>
            拦截器变量名
            </summary>
        </member>
        <member name="F:EzrealClient.Analyzers.SourceGenerator.HttpApiCodeBuilder.actionInvokersFieldName">
            <summary>
            action执行器变量名
            </summary>
        </member>
        <member name="P:EzrealClient.Analyzers.SourceGenerator.HttpApiCodeBuilder.Usings">
            <summary>
            using
            </summary>
        </member>
        <member name="P:EzrealClient.Analyzers.SourceGenerator.HttpApiCodeBuilder.Namespace">
            <summary>
            命名空间
            </summary>
        </member>
        <member name="P:EzrealClient.Analyzers.SourceGenerator.HttpApiCodeBuilder.BaseInterfaceName">
            <summary>
            基础接口名
            </summary>
        </member>
        <member name="P:EzrealClient.Analyzers.SourceGenerator.HttpApiCodeBuilder.HttpApiTypeName">
            <summary>
            代理的接口类型名称
            </summary>
        </member>
        <member name="P:EzrealClient.Analyzers.SourceGenerator.HttpApiCodeBuilder.ClassName">
            <summary>
            类名
            </summary>
        </member>
        <member name="P:EzrealClient.Analyzers.SourceGenerator.HttpApiCodeBuilder.CtorName">
            <summary>
            构造器名
            </summary>
        </member>
        <member name="M:EzrealClient.Analyzers.SourceGenerator.HttpApiCodeBuilder.#ctor(Microsoft.CodeAnalysis.INamedTypeSymbol)">
            <summary>
            HttpApi代码构建器
            </summary>
            <param name="httpApi"></param>
        </member>
        <member name="M:EzrealClient.Analyzers.SourceGenerator.HttpApiCodeBuilder.ToSourceText">
            <summary>
            转换为SourceText
            </summary>
            <returns></returns>
        </member>
        <member name="M:EzrealClient.Analyzers.SourceGenerator.HttpApiCodeBuilder.ToString">
            <summary>
            转换为字符串
            </summary>
            <returns></returns>
        </member>
        <member name="M:EzrealClient.Analyzers.SourceGenerator.HttpApiCodeBuilder.FindApiMethods(Microsoft.CodeAnalysis.INamedTypeSymbol)">
            <summary>
            查找接口类型及其继承的接口的所有方法
            </summary>
            <param name="httpApi">接口</param>
            <returns></returns>
        </member>
        <member name="M:EzrealClient.Analyzers.SourceGenerator.HttpApiCodeBuilder.BuildMethod(Microsoft.CodeAnalysis.IMethodSymbol,System.Int32)">
            <summary>
            构建方法
            </summary>
            <param name="method"></param>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:EzrealClient.Analyzers.SourceGenerator.HttpApiCodeBuilder.Equals(EzrealClient.Analyzers.SourceGenerator.HttpApiCodeBuilder)">
            <summary>
            是否与目标相等
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="M:EzrealClient.Analyzers.SourceGenerator.HttpApiCodeBuilder.Equals(System.Object)">
            <summary>
            是否与目标相等
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:EzrealClient.Analyzers.SourceGenerator.HttpApiCodeBuilder.GetHashCode">
            <summary>
            获取哈希
            </summary>
            <returns></returns>
        </member>
        <member name="T:EzrealClient.Analyzers.SourceGenerator.HttpApiSourceGenerator">
            <summary>
            HttpApi代码生成器
            </summary>
        </member>
        <member name="M:EzrealClient.Analyzers.SourceGenerator.HttpApiSourceGenerator.Initialize(Microsoft.CodeAnalysis.GeneratorInitializationContext)">
            <summary>
            初始化
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:EzrealClient.Analyzers.SourceGenerator.HttpApiSourceGenerator.Execute(Microsoft.CodeAnalysis.GeneratorExecutionContext)">
            <summary>
            执行
            </summary>
            <param name="context"></param>
        </member>
        <member name="T:EzrealClient.Analyzers.SourceGenerator.HttpApiSyntaxReceiver">
            <summary>
            httpApi语法接收器
            </summary>
        </member>
        <member name="F:EzrealClient.Analyzers.SourceGenerator.HttpApiSyntaxReceiver.IHttpApiTypeName">
            <summary>
            接口标记名称
            </summary>
        </member>
        <member name="F:EzrealClient.Analyzers.SourceGenerator.HttpApiSyntaxReceiver.interfaceSyntaxList">
            <summary>
            接口列表
            </summary>
        </member>
        <member name="M:EzrealClient.Analyzers.SourceGenerator.HttpApiSyntaxReceiver.Microsoft#CodeAnalysis#ISyntaxReceiver#OnVisitSyntaxNode(Microsoft.CodeAnalysis.SyntaxNode)">
            <summary>
            访问语法树 
            </summary>
            <param name="syntaxNode"></param>
        </member>
        <member name="M:EzrealClient.Analyzers.SourceGenerator.HttpApiSyntaxReceiver.GetHttpApiTypes(Microsoft.CodeAnalysis.Compilation)">
            <summary>
            获取所有HttpApi符号
            </summary>
            <param name="compilation"></param>
            <returns></returns>
        </member>
        <member name="M:EzrealClient.Analyzers.SourceGenerator.HttpApiSyntaxReceiver.IsHttpApiInterface(Microsoft.CodeAnalysis.INamedTypeSymbol,Microsoft.CodeAnalysis.INamedTypeSymbol,Microsoft.CodeAnalysis.INamedTypeSymbol)">
            <summary>
            是否为http接口
            </summary>
            <param name="interface"></param>
            <param name="ihttpApi"></param>
            <param name="iapiAttribute"></param>
            <returns></returns>
        </member>
        <member name="M:EzrealClient.Analyzers.SourceGenerator.HttpApiSyntaxReceiver.HasAttribute(Microsoft.CodeAnalysis.ISymbol,Microsoft.CodeAnalysis.INamedTypeSymbol)">
            <summary>
            返回是否声明指定的特性
            </summary>
            <param name="symbol"></param>
            <param name="attribute"></param>
            <returns></returns>
        </member>
    </members>
</doc>
